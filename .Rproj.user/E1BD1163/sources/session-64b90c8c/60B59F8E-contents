remotes::install_github("pipaber/Cara1.0")
library(Cara1.0)
k <- keys(Cara1.0, keytype = "GId")
k <- keys(Cara1.0, keytype = "GID")
k
columns(Cara1.0)
select(Cara1.0, keys = k[1:15], columns = c("GID", "GOALL", "TXNAME"))
select(Cara1.0, keys = k[1:15], columns = c("GID", "GOALL", "TXNAME"), keytype = "GID")
getwd()
library(BiocCheck)
BiocCheckGitClone(package = "Cara1.0")
BiocCheckGitClone(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
.libPaths()
?.libPaths()
?.libPaths()
.libPaths(include.site = T)
.libPaths(include.site = F)
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
devtools::uses_testthat(pkg = "Cara1.0")
devtools::uses_testthat(pkg = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
?devtools::uses_testthat()
library(Cara1.0)
tr = transcriptsBy(Cara1.0, by = "gene")
tr
tr
tr[5000]
rgb(24,129,194)
Sys.Date()
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
vignette("Cara1.0 Usage", package = "Cara1.0")
vignette("Cara1.0_Usage", package = "Cara1.0")
BiocCheckGitClone(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
getwd()
library(testthat)
usethis::use_test("Cara1.0_test")
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
BiocVersion()
library(BiocVersion)
BiocManager::version()
library(AnnotationHub)
ah <- AnnotationHub()
query(ah, "TxDb")
query(ah, "BsGenome")
query(ah, "Bsgenome")
query(ah, "genome")
BSgenome.Hsapiens.UCSC.hg19::BSgenome.Hsapiens.UCSC.hg19
query(ah, "BSgenome")
Cara1.0::Cara1.0
org.Carabica.eg.db::org.Carabica.eg.db
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
library(BiocCheck)
BiocCheck(package = "C:/Users/Piero/AppData/Local/R/win-library/4.3/Cara1.0")
BiocManager::version()
list.files()
list.dirs()
library(GenomeInfoDb)
available.packages()
GenomeInfoDb::genomeBuilds()
GenomeInfoDb::listOrganisms()
library(Cara1.0)
Cara1.0::Cara1.0
Cara1.0::Cara1.0$
Cara1.0::Cara1.0@keys
library(seqinr)
BiocManager::available("seqinr")
BiocManager::install("seqinr")
library(seqinr)
ape::read.GenBank("AB003468", as.character = "TRUE")
ape::read.GenBank("AB003468", as.character = F)
ape::read.GenBank("AB003468", as.character = "TRUE") -> a
a$AB003468
a$AB003468
rentrez::entrez_search(db="nucleotide", term="human superoxide dismutase")
rentrez::entrez_fetch()
rentrez::entrez_search(db="nucleotide", term="human superoxide dismutase") -> a
a
class(a)
a$ids
a$ids[1]
a$ids[1] -> ind
rentrez::entrez_fetch(db = "nucleotide", id = ind, rettype = "fasta")
rentrez::entrez_fetch(db = "nucleotide", id = ind, rettype = "fasta") -> b
b
read.fasta(b)
b
BiocManager::available("peptides")
BiocManager::install("peptides")
library(peptides)
BiocManager::install("peptides")
BiocManager::install("Peptides")
Peptides::aaDescriptors()
Peptides::aaList()
Peptides::aaSMILES()
?Peptides::mw
mw(seq = "QWGRRCCGWGPGRRYCVRWC",monoisotopic = FALSE)
Peptides::mw(seq = "QWGRRCCGWGPGRRYCVRWC",monoisotopic = FALSE)
Peptides::mz(seq = "QWGRRCCGWGPGRRYCVRWC",monoisotopic = FALSE)
Peptides::mz(seq = "QWGRRCCGWGPGRRYCVRWC")
citation("seqinr")
?citation
citation("Biostrings")
citation("Peptides")
citation("ape")
citation()
citation("phangorn")
library(AnnotationHub)
ah <- AnnotationHub()
query(ah, "Cara1.0")
query(ah, "Coffea arabica")
query(ah, c("Cara1.0"))
?AnnotationHub
snapshotDate(ah)
snapshotDate(ah)
AnnotationHub::AnnotationHub(cache = )
possibleDates(ah)
snapshotDate(ah)
snapshotDate(ah) <- "2023-06-20"
hubUrl()
removeCache(ah)
removeCache(ah)
ah <- AnnotationHub()
query(ah, c("Cara1.0"))
snapshotDate()
snapshotDate(ah)
snapshotDate(ah) <- "2023-06-20"
possibleDates()
possibleDates(ah)
possibleExtends(ah)
BiocManager::available("AnnotationHub")
remotes::install_github("Bioconductor/AnnotationHub", force = T)
remotes::install_github("Bioconductor/AnnotationHub", force = T)
detach("package:AnnotationHub", unload = TRUE)
detach("package:AnnotationHub", unload = TRUE)
remove.packages("AnnotationHub", lib="C:/Program Files/R/R-4.3.0/library")
remotes::install_github("Bioconductor/AnnotationHub", force = T)
remove.packages("vctrs")
remotes::install_github("r-lib/vctrs")
.libPaths()
.libPaths("C:/Program Files/R/R-4.3.0/library")
remotes::install_github("r-lib/vctrs")
install.packages(c("BiocManager", "broom", "bs4Dash", "bslib", "curl", "datawizard", "DEoptimR", "gargle", "ggfun", "ggnewscale", "googledrive", "googlesheets4", "ICS", "igraph", "jsonlite", "knitr", "locfit", "maptools", "matrixStats", "mvtnorm", "parallelly", "parameters", "performance", "pkgbuild", "plotly", "RcppArmadillo", "reticulate", "rgdal", "rmarkdown", "robustbase", "rotl", "scatterpie", "sp", "terra", "testthat", "usethis", "worrms"))
library()
remotes::install_github("Bioconductor/AnnotationHub", force = T)
library(AnnotationHub)
ah <- AnnotationHub()
query(ah, "Cara1.0")
